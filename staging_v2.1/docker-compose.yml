services:
  # Service name, container name will be <project name>-<service name>-1 by default
  db:
    container_name: "db${DEPLOY_NAME:-}"
    profiles: [ "data", "all" ]
    # Docker image that it will set up
    image: "${DB_APP_IMAGE}:${DB_VERSION}"
    # A volume is basically a file system shared between the host and the container
    volumes:
      # <volume name in volumes below>:<container destination directory>
      # This means the volume will be accessible from the container in the dest. directory in the container
      - dodeka-db-volume:${DB_RESOURCES_TARGET}
    command: -c config_file=${DB_CONF_FILE}
    # Some environment variables depend on deployment variables, so we load those in manually
    environment:
      - PGDATA=${DB_RESOURCES_TARGET}
      - POSTGRES_PASSWORD
      - POSTGRES_USER
    # This maps ports, so the container port will be available at localhost:<HOST_PORT>
    ports:
      - "${DB_HOST_HOST}:${DB_HOST_PORT}:3141"
    # Shared memory size, defaults to 64m which can cause problems (apparently)
    shm_size: 256m
    restart: always
#    healthcheck:
#        test: "pg_isready -p 3141"
#        interval: 30s
#        retries: 5
#        start_period: 10s
#        start_interval: 2s
#        timeout: 10s
  kv:
    container_name: "kv${DEPLOY_NAME:-}"
    profiles: [ "data", "all" ]
    image: "${KV_IMAGE}:${KV_VERSION}"
    environment:
      - REDIS_PASSWORD
    ports:
      - "${KV_HOST_HOST}:${KV_HOST_PORT}:6379"
    restart: always
  server:
    container_name: "server${DEPLOY_NAME:-}"
    profiles: [ "all" ]
    depends_on:
      - db
      - kv
    # Docker image that it will set up
    image: "${SERVER_IMAGE}:${SERVER_VERSION}"
    # Some environment variables depend on deployment variables, so we load those in manually
    environment:
      - DB_PASS=${POSTGRES_PASSWORD}
      - KV_PASS=${REDIS_PASSWORD}
      - MAIL_PASS=${COMCOM_MAIL_PASS}
      - KEY_PASS=${KEY_PASSWORD}
      - RECREATE=${RECREATE}
    # This maps ports, so the container port will be available at localhost:<HOST_PORT>
    ports:
      - "${SERVER_HOST_HOST}:${SERVER_HOST_PORT}:4241"
    # Shared memory size, defaults to 64m which can cause problems (apparently)
    shm_size: 256m
    # This important for being able to send email when email has same ip as host
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    # Prevent too large core dumps
    ulimits:
      core:
        soft: 0
        hard: 0
volumes:
  # This name should correspond to the volume mentioned in volumes above
  dodeka-db-volume:
    # A local directory
    driver: local
    name: dodeka-db-volume-staging
networks:
  # Set up a network so that other containers on this network can access each other
  # A different container on this network can access this container by using the container name as the hostname
  # So localhost:3000 is exposed to other containers as <container name>:3000
  default:
    name: ${NETWORK_NAME}